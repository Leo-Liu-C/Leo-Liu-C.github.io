<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Leo Liu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leo-liu-c.github.io/"/>
  <updated>2019-11-15T10:01:34.901Z</updated>
  <id>http://leo-liu-c.github.io/</id>
  
  <author>
    <name>Leo Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot打包将配置文件和lib分开</title>
    <link href="http://leo-liu-c.github.io/2019/11/15/Untitled/"/>
    <id>http://leo-liu-c.github.io/2019/11/15/Untitled/</id>
    <published>2019-11-15T10:00:12.000Z</published>
    <updated>2019-11-15T10:01:34.901Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">        &lt;!--设置打包名称--&gt;</span><br><span class="line">        &lt;finalName&gt;scheduled&lt;/finalName&gt;</span><br><span class="line">        &lt;resources&gt;</span><br><span class="line">        &lt;/resources&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;!-- 打JAR包 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;!-- 不打包资源文件（配置文件和依赖包分开） --&gt;</span><br><span class="line">                    &lt;excludes&gt;</span><br><span class="line">                        &lt;exclude&gt;*.**&lt;/exclude&gt;</span><br><span class="line">                        &lt;exclude&gt;*/*.xml&lt;/exclude&gt;</span><br><span class="line">                    &lt;/excludes&gt;</span><br><span class="line">                    &lt;archive&gt;</span><br><span class="line">                        &lt;manifest&gt;</span><br><span class="line">                            &lt;addClasspath&gt;true&lt;/addClasspath&gt;</span><br><span class="line">                            &lt;!-- MANIFEST.MF 中 Class-Path 加入前缀 --&gt;</span><br><span class="line">                            &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</span><br><span class="line">                            &lt;!-- jar包不包含唯一版本标识 --&gt;</span><br><span class="line">                            &lt;useUniqueVersions&gt;false&lt;/useUniqueVersions&gt;</span><br><span class="line">                            &lt;!--指定入口类 --&gt;</span><br><span class="line">                            &lt;mainClass&gt;cn.jeefast.scheduled.ScheduledApplication&lt;/mainClass&gt;</span><br><span class="line">                        &lt;/manifest&gt;</span><br><span class="line">                        &lt;manifestEntries&gt;</span><br><span class="line">                            &lt;!--MANIFEST.MF 中 Class-Path 加入资源文件目录 --&gt;</span><br><span class="line">                            &lt;Class-Path&gt;./resources/&lt;/Class-Path&gt;</span><br><span class="line">                        &lt;/manifestEntries&gt;</span><br><span class="line">                    &lt;/archive&gt;</span><br><span class="line">                    &lt;outputDirectory&gt;$&#123;project.build.directory&#125;&lt;/outputDirectory&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;copy-dependencies&lt;/id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;copy-dependencies&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                        &lt;configuration&gt;</span><br><span class="line">                            &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/lib/&lt;/outputDirectory&gt;</span><br><span class="line">                        &lt;/configuration&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 该插件的作用是用于复制指定的文件 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt; &lt;!-- 复制配置文件 --&gt;</span><br><span class="line">                        &lt;id&gt;copy-resources&lt;/id&gt;</span><br><span class="line">                        &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;copy-resources&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                        &lt;configuration&gt;</span><br><span class="line">                            &lt;resources&gt;</span><br><span class="line">                                &lt;resource&gt;</span><br><span class="line">                                    &lt;directory&gt;src/main/resources&lt;/directory&gt;</span><br><span class="line">                                    &lt;includes&gt;</span><br><span class="line">                                        &lt;!-- &lt;include&gt;*.properties&lt;/include&gt; --&gt;</span><br><span class="line">                                    &lt;/includes&gt;</span><br><span class="line">                                &lt;/resource&gt;</span><br><span class="line">                            &lt;/resources&gt;</span><br><span class="line">                            &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/resources&lt;/outputDirectory&gt;</span><br><span class="line">                        &lt;/configuration&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- SpringBoot 打包插件，把 maven-jar-plugin 打成的jar包重新打成可运行jar包 --&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;!--重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖 --&gt;</span><br><span class="line">                    &lt;includes&gt;</span><br><span class="line">                        &lt;include&gt;</span><br><span class="line">                            &lt;groupId&gt;null&lt;/groupId&gt;</span><br><span class="line">                            &lt;artifactId&gt;null&lt;/artifactId&gt;</span><br><span class="line">                        &lt;/include&gt;</span><br><span class="line">                    &lt;/includes&gt;</span><br><span class="line">                    &lt;layout&gt;ZIP&lt;/layout&gt;</span><br><span class="line">                    &lt;!--使用外部配置文件，jar包里没有资源文件 --&gt;</span><br><span class="line">                    &lt;addResources&gt;true&lt;/addResources&gt;</span><br><span class="line">                    &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/resources&lt;/outputDirectory&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;repackage&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                        &lt;configuration&gt;</span><br><span class="line">                            &lt;!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar --&gt;</span><br><span class="line">                            &lt;!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar --&gt;</span><br><span class="line">                            &lt;!--&lt;classifier&gt;run&lt;/classifier&gt; --&gt;</span><br><span class="line">                        &lt;/configuration&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>WindRose</title>
    <link href="http://leo-liu-c.github.io/2019/11/15/WindRose/"/>
    <id>http://leo-liu-c.github.io/2019/11/15/WindRose/</id>
    <published>2019-11-15T09:49:18.000Z</published>
    <updated>2019-11-15T09:59:10.690Z</updated>
    
    <content type="html"><![CDATA[<p>java依赖jfreechart绘制风速风向玫瑰图 :  运用jfreechart绘制蜘蛛雷达图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line">jfreechart依赖</span><br><span class="line">&lt;!--echarts--&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/jfree/jcommon --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;jfree&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jcommon&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.0.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/org.jfree/jfreechart --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.jfree&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jfreechart&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.0.19&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.jfree.chart.ChartPanel;</span><br><span class="line">import org.jfree.chart.ChartUtilities;</span><br><span class="line">import org.jfree.chart.JFreeChart;</span><br><span class="line">import org.jfree.chart.plot.SpiderWebPlot;</span><br><span class="line">import org.jfree.chart.title.LegendTitle;</span><br><span class="line">import org.jfree.chart.title.TextTitle;</span><br><span class="line">import org.jfree.data.category.DefaultCategoryDataset;</span><br><span class="line">import org.jfree.ui.RectangleEdge;</span><br><span class="line"></span><br><span class="line">import javax.swing.*;</span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class WindRoseImgChart &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">//        new MySpriderWebPlotTest().windRose(&quot;2019-11-06&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void windRose(String datetime, float[] winds, float[] windf) &#123;</span><br><span class="line">        JFrame jf = new JFrame();</span><br><span class="line">        jf.add(erstelleSpinnenDiagramm(datetime, winds, windf));</span><br><span class="line">        jf.pack();</span><br><span class="line">        jf.setVisible(false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static JPanel erstelleSpinnenDiagramm(String datetime, float[] winds, float[] windf) &#123;</span><br><span class="line"></span><br><span class="line">        DefaultCategoryDataset dataset = new DefaultCategoryDataset();</span><br><span class="line">        String group1 = &quot;风速 单位:m/s&quot;;</span><br><span class="line">        dataset.addValue(winds[0], group1, &quot;N&quot;);</span><br><span class="line">        dataset.addValue(winds[1], group1, &quot;NNE&quot;);</span><br><span class="line">        dataset.addValue(winds[2], group1, &quot;NE&quot;);</span><br><span class="line">        dataset.addValue(winds[3], group1, &quot;EEN&quot;);</span><br><span class="line">        dataset.addValue(winds[4], group1, &quot;E&quot;);</span><br><span class="line">        dataset.addValue(winds[5], group1, &quot;EES&quot;);</span><br><span class="line">        dataset.addValue(winds[6], group1, &quot;ES&quot;);</span><br><span class="line">        dataset.addValue(winds[7], group1, &quot;SSE&quot;);</span><br><span class="line">        dataset.addValue(winds[8], group1, &quot;S&quot;);</span><br><span class="line">        dataset.addValue(winds[9], group1, &quot;SSW&quot;);</span><br><span class="line">        dataset.addValue(winds[10], group1, &quot;SW&quot;);</span><br><span class="line">        dataset.addValue(winds[11], group1, &quot;WWS&quot;);</span><br><span class="line">        dataset.addValue(winds[12], group1, &quot;W&quot;);</span><br><span class="line">        dataset.addValue(winds[13], group1, &quot;WWN&quot;);</span><br><span class="line">        dataset.addValue(winds[14], group1, &quot;WN&quot;);</span><br><span class="line">        dataset.addValue(winds[15], group1, &quot;NNW&quot;);</span><br><span class="line">        String group3 = &quot;风向风频 单位:*10&quot;;</span><br><span class="line">        dataset.addValue(windf[0], group3, &quot;N&quot;);</span><br><span class="line">        dataset.addValue(windf[1], group3, &quot;NNE&quot;);</span><br><span class="line">        dataset.addValue(windf[2], group3, &quot;NE&quot;);</span><br><span class="line">        dataset.addValue(windf[3], group3, &quot;EEN&quot;);</span><br><span class="line">        dataset.addValue(windf[4], group3, &quot;E&quot;);</span><br><span class="line">        dataset.addValue(windf[5], group3, &quot;EES&quot;);</span><br><span class="line">        dataset.addValue(windf[6], group3, &quot;ES&quot;);</span><br><span class="line">        dataset.addValue(windf[7], group3, &quot;SSE&quot;);</span><br><span class="line">        dataset.addValue(windf[8], group3, &quot;S&quot;);</span><br><span class="line">        dataset.addValue(windf[9], group3, &quot;SSW&quot;);</span><br><span class="line">        dataset.addValue(windf[10], group3, &quot;SW&quot;);</span><br><span class="line">        dataset.addValue(windf[11], group3, &quot;WWS&quot;);</span><br><span class="line">        dataset.addValue(windf[12], group3, &quot;W&quot;);</span><br><span class="line">        dataset.addValue(windf[13], group3, &quot;WWN&quot;);</span><br><span class="line">        dataset.addValue(windf[14], group3, &quot;WN&quot;);</span><br><span class="line">        dataset.addValue(windf[15], group3, &quot;NNW&quot;);</span><br><span class="line"></span><br><span class="line">        Arrays.sort(windf);</span><br><span class="line">        Arrays.sort(winds);</span><br><span class="line">        float num = windf[15] &gt; winds[15] ? windf[15] : winds[15];</span><br><span class="line">        String group2 = &quot;&quot;;</span><br><span class="line">        dataset.addValue(num, group2, &quot;N&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;NNE&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;NE&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;EEN&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;E&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;EES&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;ES&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;SSE&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;S&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;SSW&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;SW&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;WWS&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;W&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;WWN&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;WN&quot;);</span><br><span class="line">        dataset.addValue(num, group2, &quot;NNW&quot;);</span><br><span class="line">        //带刻度雷达图</span><br><span class="line">        MySpiderWebPlot spiderwebplot = new MySpiderWebPlot(dataset);</span><br><span class="line">        //不带刻度</span><br><span class="line">// SpiderWebPlot spiderwebplot = new SpiderWebPlot(dataset);</span><br><span class="line">        JFreeChart jfreechart = new JFreeChart(&quot;风速风向玫瑰图&quot;, TextTitle.DEFAULT_FONT, spiderwebplot, false);</span><br><span class="line">        //设置线条颜色 索引从0开始</span><br><span class="line">        spiderwebplot.setSeriesPaint(0, Color.red);</span><br><span class="line">        spiderwebplot.setSeriesPaint(1, Color.blue);</span><br><span class="line">        spiderwebplot.setSeriesPaint(2, Color.black);</span><br><span class="line">        LegendTitle legendtitle = new LegendTitle(spiderwebplot);</span><br><span class="line">        legendtitle.setPosition(RectangleEdge.BOTTOM);</span><br><span class="line">//        legendtitle.set</span><br><span class="line">        jfreechart.addSubtitle(legendtitle);</span><br><span class="line">        try &#123;</span><br><span class="line">            saveAsFile(jfreechart, datetime, &quot;bd&quot;, 1000, 500);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        // 6:使用chartPanel接收</span><br><span class="line"></span><br><span class="line">        ChartPanel chartpanel = new ChartPanel(jfreechart);</span><br><span class="line">        return chartpanel;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 保存文件</span><br><span class="line">     *</span><br><span class="line">     * @param chart</span><br><span class="line">     * @param datetime</span><br><span class="line">     * @param weight</span><br><span class="line">     * @param height</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static void saveAsFile(JFreeChart chart, String datetime, String bridge,</span><br><span class="line">                                  int weight, int height) throws Exception &#123;</span><br><span class="line">        String outputPath = &quot;c:\\img\\&quot; + datetime + &quot;-&quot; + bridge + &quot;-windrose.png&quot;;</span><br><span class="line">        FileOutputStream out = null;</span><br><span class="line">        File outFile = new File(outputPath);</span><br><span class="line">        if (!outFile.getParentFile().exists()) &#123;</span><br><span class="line">            outFile.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        out = new FileOutputStream(outputPath);</span><br><span class="line">        // 保存为PNG</span><br><span class="line">        ChartUtilities.writeChartAsPNG(out, chart, weight, height);</span><br><span class="line">        // 保存为JPEG</span><br><span class="line">//         ChartUtilities.writeChartAsJPEG(out, chart, weight, height);</span><br><span class="line">        out.flush();</span><br><span class="line">        if (out != null) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                // do nothing</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将雷达图标出刻度,以最大值为最长刻度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">package cn.jeefast.scheduled.utils.createimg;</span><br><span class="line"></span><br><span class="line">import org.jfree.chart.plot.SpiderWebPlot;</span><br><span class="line">import org.jfree.data.category.CategoryDataset;</span><br><span class="line"></span><br><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.font.FontRenderContext;</span><br><span class="line">import java.awt.font.LineMetrics;</span><br><span class="line">import java.awt.geom.*;</span><br><span class="line">import java.text.NumberFormat;</span><br><span class="line"></span><br><span class="line">public class MySpiderWebPlot extends SpiderWebPlot &#123;</span><br><span class="line">    private int ticks = DEFAULT_TICKS;</span><br><span class="line">    private static final int DEFAULT_TICKS = 5;</span><br><span class="line">    private NumberFormat format = NumberFormat.getInstance();</span><br><span class="line">    private static final double PERPENDICULAR = 90;</span><br><span class="line">    private static final double TICK_SCALE = 0.015;</span><br><span class="line">    private int valueLabelGap = DEFAULT_GAP;</span><br><span class="line">    private static final int DEFAULT_GAP = 10;</span><br><span class="line">    private static final double THRESHOLD = 15;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    MySpiderWebPlot(CategoryDataset createCategoryDataset) &#123;</span><br><span class="line">        super(createCategoryDataset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void drawLabel(final Graphics2D g2, final Rectangle2D plotArea, final double value,</span><br><span class="line">                             final int cat, final double startAngle, final double extent) &#123;</span><br><span class="line">        super.drawLabel(g2, plotArea, value, cat, startAngle, extent);</span><br><span class="line">        final FontRenderContext frc = g2.getFontRenderContext();</span><br><span class="line">        final double[] transformed = new double[2];</span><br><span class="line">        final double[] transformer = new double[2];</span><br><span class="line">        final Arc2D arc1 = new Arc2D.Double(plotArea, startAngle, 0, Arc2D.OPEN);</span><br><span class="line">        for (int i = 1; i &lt;= ticks; i++) &#123;</span><br><span class="line">            final Point2D point1 = arc1.getEndPoint();</span><br><span class="line">            final double deltaX = plotArea.getCenterX();</span><br><span class="line">            final double deltaY = plotArea.getCenterY();</span><br><span class="line">            double labelX = point1.getX() - deltaX;</span><br><span class="line">            double labelY = point1.getY() - deltaY;</span><br><span class="line">            final double scale = ((double) i / (double) ticks);</span><br><span class="line">            final AffineTransform tx = AffineTransform.getScaleInstance(scale, scale);</span><br><span class="line">            final AffineTransform pointTrans = AffineTransform.getScaleInstance(scale + TICK_SCALE, scale + TICK_SCALE);</span><br><span class="line">            transformer[0] = labelX;</span><br><span class="line">            transformer[1] = labelY;</span><br><span class="line">            pointTrans.transform(transformer, 0, transformed, 0, 1);</span><br><span class="line">            final double pointX = transformed[0] + deltaX;</span><br><span class="line">            final double pointY = transformed[1] + deltaY;</span><br><span class="line">            tx.transform(transformer, 0, transformed, 0, 1);</span><br><span class="line">            labelX = transformed[0] + deltaX;</span><br><span class="line">            labelY = transformed[1] + deltaY;</span><br><span class="line">            double rotated = (PERPENDICULAR);</span><br><span class="line">            AffineTransform rotateTrans = AffineTransform.getRotateInstance(Math.toRadians(rotated), labelX, labelY);</span><br><span class="line">            transformer[0] = pointX;</span><br><span class="line">            transformer[1] = pointY;</span><br><span class="line">            rotateTrans.transform(transformer, 0, transformed, 0, 1);</span><br><span class="line">            final double x1 = transformed[0];</span><br><span class="line">            final double y1 = transformed[1];</span><br><span class="line">            rotated = (-PERPENDICULAR);</span><br><span class="line">            rotateTrans = AffineTransform.getRotateInstance(Math.toRadians(rotated), labelX, labelY);</span><br><span class="line">            rotateTrans.transform(transformer, 0, transformed, 0, 1);</span><br><span class="line">            final Composite saveComposite = g2.getComposite();</span><br><span class="line">            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1.0f));</span><br><span class="line">            g2.draw(new Line2D.Double(transformed[0], transformed[1], x1, y1));</span><br><span class="line">            if (startAngle == this.getStartAngle()) &#123;</span><br><span class="line">                final String label = format.format(((double) i / (double) ticks) * this.getMaxValue());</span><br><span class="line">                final Rectangle2D labelBounds = getLabelFont().getStringBounds(label, frc);</span><br><span class="line">                final LineMetrics lm = getLabelFont().getLineMetrics(label, frc);</span><br><span class="line">                final double ascent = lm.getAscent();</span><br><span class="line">                if (Math.abs(labelX - plotArea.getCenterX()) &lt; THRESHOLD) &#123;</span><br><span class="line">                    labelX += valueLabelGap;</span><br><span class="line">                    labelY += ascent / (float) 2;</span><br><span class="line">                &#125; else if (Math.abs(labelY - plotArea.getCenterY()) &lt; THRESHOLD) &#123;</span><br><span class="line">                    labelY += valueLabelGap;</span><br><span class="line">                &#125; else if (labelX &gt;= plotArea.getCenterX()) &#123;</span><br><span class="line">                    if (labelY &lt; plotArea.getCenterY()) &#123;</span><br><span class="line">                        labelX += valueLabelGap;</span><br><span class="line">                        labelY += valueLabelGap;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        labelX -= valueLabelGap;</span><br><span class="line">                        labelY += valueLabelGap;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (labelY &gt; plotArea.getCenterY()) &#123;</span><br><span class="line">                        labelX -= valueLabelGap;</span><br><span class="line">                        labelY -= valueLabelGap;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        labelX += valueLabelGap;</span><br><span class="line">                        labelY -= valueLabelGap;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                g2.setPaint(getLabelPaint());</span><br><span class="line">                g2.setFont(getLabelFont());</span><br><span class="line">                g2.drawString(label, (float) labelX, (float) labelY);</span><br><span class="line">            &#125;</span><br><span class="line">            g2.setComposite(saveComposite);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java依赖jfreechart绘制风速风向玫瑰图 :  运用jfreechart绘制蜘蛛雷达图&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>word插入图片</title>
    <link href="http://leo-liu-c.github.io/2019/11/15/word%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>http://leo-liu-c.github.io/2019/11/15/word%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2019-11-15T02:34:32.000Z</published>
    <updated>2019-11-15T02:49:42.062Z</updated>
    
    <content type="html"><![CDATA[<p>java word</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">poi依赖</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-base&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-web&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;easypoi-annotation&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//开始创建文件</span><br><span class="line">        File fileFolder = new File(uploadFolder);</span><br><span class="line">        if (!fileFolder.exists()) &#123;</span><br><span class="line">            //如果不存在 则创建</span><br><span class="line">            fileFolder.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String fileName = datetime + &quot;-&quot; + new Date().getTime() + bridgeName + &quot;.docx&quot;;</span><br><span class="line">        String path = uploadFolder + fileName;</span><br><span class="line">        String savePath = &quot;upload/&quot; + fileName;</span><br><span class="line">        try &#123;</span><br><span class="line">            MyXWPFDocument myXWPFDocument = new MyXWPFDocument(new ClassPathResource(&quot;templates/template&quot; + tablePrefix + &quot;.docx&quot;).getInputStream());</span><br><span class="line">            WordExportUtil.exportWord07(myXWPFDocument, map);//将值写入模板文件</span><br><span class="line">//            XWPFDocument document = WordExportUtil.exportWord07(&quot;template.docx&quot;, map);//将值写入模板文件</span><br><span class="line">            File file = new File(path);</span><br><span class="line">            FileOutputStream outputStream = new FileOutputStream(file);</span><br><span class="line">            myXWPFDocument.write(outputStream);</span><br><span class="line">            myXWPFDocument.close();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.poi.openxml4j.exceptions.InvalidFormatException;</span><br><span class="line">import org.apache.poi.util.Units;</span><br><span class="line">import org.apache.poi.xwpf.usermodel.*;</span><br><span class="line"></span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 给word插入图片</span><br><span class="line"> */</span><br><span class="line">public class AddSensorImg &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //测试添加图片</span><br><span class="line">        //替换前docx文件</span><br><span class="line">        String sourceFile=&quot;C:\\img\\template.docx&quot;;</span><br><span class="line">        //替换后文件</span><br><span class="line">        String targetFile=&quot;C:\\img\\replace.docx&quot;;</span><br><span class="line">        //图片资源文件</span><br><span class="line">        String imgFile = &quot;C:\\img\\2019-11-01-bd-sensor&quot;;</span><br><span class="line">        addStampImage(sourceFile, targetFile,imgFile,5);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 执行主类</span><br><span class="line">     * @param sourceFile    替换件资源文件目录</span><br><span class="line">     * @param targetFile    替换后资源文件目录</span><br><span class="line">     */</span><br><span class="line">    public static void addStampImage(String sourceFile, String targetFile,String imgFile,int size) &#123;</span><br><span class="line">        XWPFDocument doc;</span><br><span class="line">        try &#123;</span><br><span class="line">            doc = new XWPFDocument(new FileInputStream(sourceFile));</span><br><span class="line">            for(XWPFTable table : doc.getTables()) &#123;</span><br><span class="line">                for(XWPFTableRow row : table.getRows()) &#123;</span><br><span class="line">                    for(XWPFTableCell cell : row.getTableCells()) &#123;//遍历每一个单元格</span><br><span class="line">                        if(cell.getText().contains(&quot;&amp;预警折线图&amp;&quot;)) &#123;//如果遇到&quot;&amp;章&quot;则进行替换</span><br><span class="line">                            try &#123;</span><br><span class="line">                                insertCellStamp(cell,imgFile,size);//给带有要盖章字样的单元格 加上章的图片</span><br><span class="line">                            &#125; catch (Exception e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            FileOutputStream fos = new FileOutputStream(targetFile);</span><br><span class="line">            doc.write(fos);</span><br><span class="line">            fos.close();</span><br><span class="line">            doc.write(new FileOutputStream(targetFile));</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 插入图片操作</span><br><span class="line">     * @param cell</span><br><span class="line">     * @param imgFile   图片资源路径</span><br><span class="line">     * @throws InvalidFormatException</span><br><span class="line">     * @throws IOException</span><br><span class="line">     */</span><br><span class="line">    private static void insertCellStamp(XWPFTableCell cell,String imgFile,int size) throws  InvalidFormatException, IOException &#123;//给带有要盖章字样的单元格 加上章的图片</span><br><span class="line">        List&lt;String&gt; stamps = new ArrayList&lt;&gt;();//存放要加入的图片</span><br><span class="line">        int stampOrder = 0;//图片的序号，从0开始</span><br><span class="line"></span><br><span class="line">        //获取需要的图片，</span><br><span class="line">        for(XWPFParagraph para :cell.getParagraphs()) &#123;</span><br><span class="line">            String paraText = para.getText();//从段落中获取要盖的章的名称</span><br><span class="line">//System.out.println(&quot;para.getText():&quot; + paraText);</span><br><span class="line">            if(paraText != null) &#123;</span><br><span class="line">                String[] split = para.getText().split(&quot; &quot;);</span><br><span class="line">                for(String s : split) &#123;</span><br><span class="line">                    s = s.trim();</span><br><span class="line">                    if(!s.isEmpty() ) &#123;</span><br><span class="line">                        stamps.add(s.replace(&quot;&amp;预警折线图&amp;&quot;, &quot;&quot;));//如：&amp;章公章01.png，去掉标识符&amp;章，只留下章的名字</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for(XWPFParagraph para :cell.getParagraphs()) &#123;</span><br><span class="line">            for (XWPFRun run : para.getRuns()) &#123;</span><br><span class="line">                run.setText(&quot;&quot;, 0);//清空所有文字</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //插入图片</span><br><span class="line">            for(int i = 0; i&lt;stamps.size() &amp;&amp; i&lt;para.getRuns().size(); i++) &#123;</span><br><span class="line">                for (int j = 0; j &lt; size; j++) &#123;</span><br><span class="line">                    try &#123;</span><br><span class="line">                        XWPFRun run = para.getRuns().get(i);</span><br><span class="line">                        String imgfile = imgFile+(j+1)+&quot;.png&quot;;</span><br><span class="line">//                    String imgFile = &quot;C:\\img\\2019-10-29-17-44-48.jpg&quot;;</span><br><span class="line">                        System.out.println(&quot;插入预警折线图图片:&quot; + imgfile);</span><br><span class="line">                        FileInputStream is = new FileInputStream(imgfile);</span><br><span class="line">                        run.addPicture(is, XWPFDocument.PICTURE_TYPE_JPEG, imgFile, Units.toEMU(450), Units.toEMU(250)); // 100x100 pixels</span><br><span class="line">                        is.close();</span><br><span class="line">                        run.setText(&quot;  &quot;,0);</span><br><span class="line">                    &#125; catch (Exception e) &#123;</span><br><span class="line">                        System.out.println(&quot;Error: ========  插入图片时出错了:可能是图片路径不存在。不影响主流程&quot;);</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java word&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>jfreechart</title>
    <link href="http://leo-liu-c.github.io/2019/11/15/jfreechart/"/>
    <id>http://leo-liu-c.github.io/2019/11/15/jfreechart/</id>
    <published>2019-11-15T02:23:00.000Z</published>
    <updated>2019-11-15T10:11:29.960Z</updated>
    
    <content type="html"><![CDATA[<p>java绘制charts图形工具类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">jfreechart依赖</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;jfree&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jcommon&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/org.jfree/jfreechart --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.jfree&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jfreechart&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.19&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><pre><code>   import org.jfree.chart.ChartFactory;import org.jfree.chart.ChartPanel;import org.jfree.chart.ChartUtilities;import org.jfree.chart.JFreeChart;import org.jfree.chart.block.BlockBorder;import org.jfree.data.category.DefaultCategoryDataset;import javax.swing.*;import java.awt.*;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.util.List;import java.util.Vector;/** * 折线图 * &lt;p&gt; * 创建图表步骤：&lt;br/&gt; * 1：创建数据集合&lt;br/&gt; * 2：创建Chart：&lt;br/&gt; * 3:设置抗锯齿，防止字体显示不清楚&lt;br/&gt; * 4:对柱子进行渲染，&lt;br/&gt; * 5:对其他部分进行渲染&lt;br/&gt; * 6:使用chartPanel接收&lt;br/&gt; * &lt;p&gt; * &lt;/p&gt; */public class SensorImgChart {//private static String outputPath = &quot;C:\\img\\&quot;+ new SimpleDateFormat(&quot;yyyy-MM-dd-HH-mm-ss&quot;).format(Calendar.getInstance().getTime())  + &quot;.jpg&quot;;public SensorImgChart() {}public static void main(String[] args) {// new SensorImgChart().createImg(&quot;巴东长江大桥&quot;,new Double[]{77.0,53.0,55.0,47.0,85.0,11.04,1.043,.0296,3.052,3.090,3.040,27.09,3.008,32.08,2.098,3.026,33.09,28.08,364.0,2.057,2.041,1.096,1.018,.00},&quot;bd&quot;,&quot;2019-10-29&quot;,11);// new SensorImgChart().createImg(&quot;巴东长江大桥&quot;,new Double[]{1.1,2.2,1.1,3.3,4.4},//                &quot;bd&quot;,&quot;2019-11-01&quot;,1,new String[]{&quot;1:01&quot;,&quot;2:01&quot;,&quot;3:01&quot;,&quot;4:01&quot;,&quot;5:01&quot;});}/** * 执行主方法 * * @param bridgeName  桥名称 * @param sensors     纵坐标报警数据 * @param bridge      桥简称 * @param dateName    时间 * @param sensorCount 报警数 * @param categories  横坐标时间值 */public void createImg(String bridgeName, Double[] sensors, String bridge,                      String dateName, int sensorCount, String[] categories, String list) {    final JFrame frame = new JFrame();    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    frame.setSize(450, 225);    frame.setLocationRelativeTo(null);    SwingUtilities.invokeLater(new Runnable() {        @Override        public void run() {            // 创建图形            ChartPanel chartPanel = new SensorImgChart().createChart(bridgeName, sensors, dateName, bridge, sensorCount, categories,list);            frame.getContentPane().add(chartPanel);            frame.setVisible(false);        }    });}/** * 数据处理 * * @return */public DefaultCategoryDataset createDataset(String bridgeName, Double[] sensorCounts, String[] categories,String list) {    // 标注类别    // 横坐标        // String[] categories = {&quot;01:00&quot;, &quot;02:00&quot;, &quot;03:00&quot;, &quot;04:00&quot;, &quot;05:00&quot;, &quot;06:00&quot;, &quot;07:00&quot;, &quot;08:00&quot;, &quot;09:00&quot;, &quot;10:00&quot;, &quot;11:00&quot;, &quot;12:00&quot;,                            //&quot;13:00&quot;,&quot;14:00&quot;,&quot;15:00&quot;,&quot;16:00&quot;,&quot;17:00&quot;,&quot;18:00&quot;,&quot;19:00&quot;,&quot;20:00&quot;,&quot;21:00&quot;,&quot;22:00&quot;,&quot;23:00&quot;,&quot;24:00&quot;};        // String[] categorie = {&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;};    Vector&lt;Serie&gt; series = new Vector&lt;Serie&gt;();    Double[] oneTL = new Double[sensorCounts.length];    Double[] oneTU = new Double[sensorCounts.length];    Double[] twoTL = new Double[sensorCounts.length];    Double[] twoTU = new Double[sensorCounts.length];    String[] split = list.split(&quot;,&quot;);    for (int i = 0; i &lt; sensorCounts.length; i++) {        oneTL[i] =Double.parseDouble(split[1]);        oneTU[i] =Double.parseDouble(split[0]);        twoTL[i] =Double.parseDouble(split[3]);        twoTU[i] =Double.parseDouble(split[2]);    }    // 柱子名称：柱子所有的值集合    series.add(new Serie(bridgeName, sensorCounts));    series.add(new Serie(&quot;一级预警上限&quot;,oneTU));    series.add(new Serie(&quot;一级预警下限&quot;, oneTL));    series.add(new Serie(&quot;二级预警上限&quot;, twoTU));    series.add(new Serie(&quot;二级预警下限&quot;, twoTL));        //series.add(new Serie(&quot;Berlin&quot;, new Double[]{42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4, 60.4, 47.6, 39.1, 46.8, 51.1}));    // 1：创建数据集合    DefaultCategoryDataset dataset = ChartUtils.createDefaultCategoryDataset(series, categories);    return dataset;}/** * 创建图形   线形图/柱状图/饼状图 * * @return */public ChartPanel createChart(String bridgeName, Double[] sensors, String dateName,                              String bridge, int sensorCount, String[] categories,String list) {    // 2：创建Chart[创建不同图形]    // param1  标题    // parma2  纵坐标    // param3    //线形图    JFreeChart chart = ChartFactory.createLineChart(&quot;预警折线图&quot;, &quot;时间&quot;, &quot;值&quot;, createDataset(bridgeName, sensors, categories,list));    //柱状图        //        JFreeChart chart = ChartFactory.createBarChart(&quot;全天温度变化折现图&quot;, &quot;时间&quot;, &quot;温度&quot;,        //                                                        createDataset(bridgeName,carCounts));    //饼状图        //        ChartFactory.createPieChart(&quot;传感器分布图&quot;,);    // 3:设置抗锯齿，防止字体显示不清楚    ChartUtils.setAntiAlias(chart);// 抗锯齿    // 4:对柱子进行渲染[[采用不同渲染]]    ChartUtils.setLineRender(chart.getCategoryPlot(), false, true);        //        ChartUtils.setBarRenderer(chart.getCategoryPlot(),true);    // 5:对其他部分进行渲染    ChartUtils.setXAixs(chart.getCategoryPlot());// X坐标轴渲染    ChartUtils.setYAixs(chart.getCategoryPlot());// Y坐标轴渲染        //        chart.getXYPlot().getDomainAxis().setLowerMargin(0);    // 设置标注无边框    chart.getLegend().setFrame(new BlockBorder(Color.WHITE));    try {        saveAsFile(chart, dateName, bridge, 1000, 500, sensorCount);    } catch (Exception e) {        e.printStackTrace();    }    // 6:使用chartPanel接收    ChartPanel chartPanel = new ChartPanel(chart);    return chartPanel;}/** * 保存文件 * * @param chart * @param outputPath * @param weight * @param height * @throws Exception */public static void saveAsFile(JFreeChart chart, String outputPath, String bridge,                              int weight, int height, int sensorCount) throws Exception {    outputPath = &quot;c:\\img\\&quot; + outputPath + &quot;-&quot; + bridge + &quot;-sensor&quot; + sensorCount + &quot;.png&quot;;    FileOutputStream out = null;    File outFile = new File(outputPath);    if (!outFile.getParentFile().exists()) {        outFile.getParentFile().mkdirs();    }    out = new FileOutputStream(outputPath);    // 保存为PNG    ChartUtilities.writeChartAsPNG(out, chart, weight, height);    // 保存为JPEG        // ChartUtilities.writeChartAsJPEG(out, chart, weight, height);    out.flush();    if (out != null) {        try {            out.close();        } catch (IOException e) {            // do nothing        }    }}}</code></pre><p> 工具类</p><pre><code>import java.awt.BasicStroke;import java.awt.Color;import java.awt.Font;import java.awt.Paint;import java.awt.Rectangle;import java.text.DecimalFormat;import java.text.NumberFormat;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Vector;import org.jfree.chart.ChartFactory;import org.jfree.chart.JFreeChart;import org.jfree.chart.StandardChartTheme;import org.jfree.chart.axis.DateAxis;import org.jfree.chart.axis.DateTickUnit;import org.jfree.chart.axis.DateTickUnitType;import org.jfree.chart.axis.ValueAxis;import org.jfree.chart.block.BlockBorder;import org.jfree.chart.labels.ItemLabelAnchor;import org.jfree.chart.labels.ItemLabelPosition;import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;import org.jfree.chart.labels.StandardPieSectionLabelGenerator;import org.jfree.chart.labels.StandardXYItemLabelGenerator;import org.jfree.chart.labels.StandardXYToolTipGenerator;import org.jfree.chart.plot.CategoryPlot;import org.jfree.chart.plot.DefaultDrawingSupplier;import org.jfree.chart.plot.PieLabelLinkStyle;import org.jfree.chart.plot.PiePlot;import org.jfree.chart.plot.Plot;import org.jfree.chart.plot.XYPlot;import org.jfree.chart.renderer.category.BarRenderer;import org.jfree.chart.renderer.category.LineAndShapeRenderer;import org.jfree.chart.renderer.category.StackedBarRenderer;import org.jfree.chart.renderer.category.StandardBarPainter;import org.jfree.chart.renderer.xy.StandardXYBarPainter;import org.jfree.chart.renderer.xy.XYBarRenderer;import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;import org.jfree.data.category.DefaultCategoryDataset;import org.jfree.data.general.DefaultPieDataset;import org.jfree.data.time.Day;import org.jfree.data.time.TimeSeries;import org.jfree.ui.RectangleInsets;import org.jfree.ui.TextAnchor;/** * Jfreechart工具类 * &lt;p&gt; * 解决中文乱码问题&lt;br&gt; * 用来创建类别图表数据集、创建饼图数据集、时间序列图数据集&lt;br&gt; * 用来对柱状图、折线图、饼图、堆积柱状图、时间序列图的样式进行渲染&lt;br&gt; * 设置X-Y坐标轴样式 * &lt;p&gt; * */public class ChartUtils {    private static String NO_DATA_MSG = &quot;数据加载失败&quot;;    private static Font FONT = new Font(&quot;宋体&quot;, Font.PLAIN, 18);    public static Color[] CHART_COLORS = {            new Color(31,129,188), new Color(92,92,97), new Color(144,237,125), new Color(255,188,117),            new Color(153,158,255), new Color(255,117,153), new Color(253,236,109), new Color(128,133,232),            new Color(158,90,102),new Color(255, 204, 102) };//颜色    static {        setChartTheme();    }    public ChartUtils() {    }    /**     * 中文主题样式 解决乱码     */    public static void setChartTheme() {        // 设置中文主题样式 解决乱码        StandardChartTheme chartTheme = new StandardChartTheme(&quot;CN&quot;);        // 设置标题字体        chartTheme.setExtraLargeFont(FONT);        // 设置图例的字体        chartTheme.setRegularFont(FONT);        // 设置轴向的字体        chartTheme.setLargeFont(FONT);        chartTheme.setSmallFont(FONT);        chartTheme.setTitlePaint(new Color(51, 51, 51));        chartTheme.setSubtitlePaint(new Color(85, 85, 85));        chartTheme.setLegendBackgroundPaint(Color.WHITE);// 设置标注        chartTheme.setLegendItemPaint(Color.BLACK);//        chartTheme.setChartBackgroundPaint(Color.WHITE);        // 绘制颜色绘制颜色.轮廓供应商        // paintSequence,outlinePaintSequence,strokeSequence,outlineStrokeSequence,shapeSequence        Paint[] OUTLINE_PAINT_SEQUENCE = new Paint[] { Color.WHITE };        // 绘制器颜色源        DefaultDrawingSupplier drawingSupplier = new DefaultDrawingSupplier(CHART_COLORS, CHART_COLORS, OUTLINE_PAINT_SEQUENCE,                DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE, DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE,                DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE);        chartTheme.setDrawingSupplier(drawingSupplier);        chartTheme.setPlotBackgroundPaint(Color.WHITE);// 绘制区域        chartTheme.setPlotOutlinePaint(Color.WHITE);// 绘制区域外边框        chartTheme.setLabelLinkPaint(new Color(8, 55, 114));// 链接标签颜色        chartTheme.setLabelLinkStyle(PieLabelLinkStyle.CUBIC_CURVE);        chartTheme.setAxisOffset(new RectangleInsets(5, 12, 5, 12));        chartTheme.setDomainGridlinePaint(new Color(192, 208, 224));// X坐标轴垂直网格颜色        chartTheme.setRangeGridlinePaint(new Color(192, 192, 192));// Y坐标轴水平网格颜色        chartTheme.setBaselinePaint(Color.WHITE);        chartTheme.setCrosshairPaint(Color.BLUE);// 不确定含义        chartTheme.setAxisLabelPaint(new Color(51, 51, 51));// 坐标轴标题文字颜色        chartTheme.setTickLabelPaint(new Color(67, 67, 72));// 刻度数字        chartTheme.setBarPainter(new StandardBarPainter());// 设置柱状图渲染        chartTheme.setXYBarPainter(new StandardXYBarPainter());// XYBar 渲染        chartTheme.setItemLabelPaint(Color.black);        chartTheme.setThermometerPaint(Color.white);// 温度计        ChartFactory.setChartTheme(chartTheme);    }/** * 必须设置文本抗锯齿 */public static void setAntiAlias(JFreeChart chart) {    chart.setTextAntiAlias(false);}/** * 设置图例无边框，默认黑色边框 */public static void setLegendEmptyBorder(JFreeChart chart) {    chart.getLegend().setFrame(new BlockBorder(Color.WHITE));}/** * 设置柱状图渲染 * * @param plot * @param isShowDataLabels */public static void setBarRenderer(CategoryPlot plot, boolean isShowDataLabels) {    plot.setNoDataMessage(NO_DATA_MSG);    plot.setInsets(new RectangleInsets(10, 10, 5, 10));    BarRenderer renderer = (BarRenderer) plot.getRenderer();    renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());    renderer.setMaximumBarWidth(0.075);// 设置柱子最大宽度    if (isShowDataLabels) {        renderer.setBaseItemLabelsVisible(true);    }    setXAixs(plot);    setYAixs(plot);}/** * 设置饼状图渲染 */public static void setPieRender(Plot plot) {    plot.setNoDataMessage(NO_DATA_MSG);    plot.setInsets(new RectangleInsets(10, 10, 5, 10));    PiePlot piePlot = (PiePlot) plot;    piePlot.setInsets(new RectangleInsets(0, 0, 0, 0));    piePlot.setCircular(true);// 圆形    // piePlot.setSimpleLabels(true);// 简单标签    piePlot.setLabelGap(0.01);    piePlot.setInteriorGap(0.05D);    piePlot.setLegendItemShape(new Rectangle(10, 10));// 图例形状    piePlot.setIgnoreNullValues(true);    piePlot.setLabelBackgroundPaint(null);// 去掉背景色    piePlot.setLabelShadowPaint(null);// 去掉阴影    piePlot.setLabelOutlinePaint(null);// 去掉边框    piePlot.setShadowPaint(null);    // 0:category 1:value:2 :percentage    piePlot.setLabelGenerator(new StandardPieSectionLabelGenerator(&quot;{0}:{2}&quot;));// 显示标签数据}/** * 创建饼图数据集合 */public static DefaultPieDataset createDefaultPieDataset(String[] categories, Object[] datas) {    DefaultPieDataset dataset = new DefaultPieDataset();    for (int i = 0; i &lt; categories.length &amp;&amp; categories != null; i++) {        String value = datas[i].toString();        if (isPercent(value)) {            value = value.substring(0, value.length() - 1);        }        if (isNumber(value)) {            dataset.setValue(categories[i], Double.valueOf(value));        }    }    return dataset;}/** * 设置 折线图样式 * * @param plot * @param isShowDataLabels *            是否显示数据标签 默认不显示节点形状 */public static void setLineRender(CategoryPlot plot, boolean isShowDataLabels) {    setLineRender(plot, isShowDataLabels, false);}/** * 设置折线图样式 * * @param plot * @param isShowDataLabels *            是否显示数据标签 */public static void setLineRender(CategoryPlot plot, boolean isShowDataLabels, boolean isShapesVisible) {    plot.setNoDataMessage(NO_DATA_MSG);    plot.setInsets(new RectangleInsets(10, 10, 0, 10), false);    LineAndShapeRenderer renderer = (LineAndShapeRenderer) plot.getRenderer();    renderer.setStroke(new BasicStroke(1.5F));    if (isShowDataLabels) {        renderer.setBaseItemLabelsVisible(true);        renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator(StandardCategoryItemLabelGenerator.DEFAULT_LABEL_FORMAT_STRING,                NumberFormat.getInstance()));        renderer.setBasePositiveItemLabelPosition(new ItemLabelPosition(ItemLabelAnchor.OUTSIDE1, TextAnchor.BOTTOM_CENTER));// weizhi    }    renderer.setBaseShapesVisible(isShapesVisible);// 数据点绘制形状    setXAixs(plot);    setYAixs(plot);}/** * 创建时间序列数据 * * @param category *            类别 * @param dateValues *            日期-值 数组 * @param xAxisTitle *            X坐标轴标题 * @return */public static TimeSeries createTimeseries(String category, Vector&lt;Object[]&gt; dateValues) {    TimeSeries timeseries = new TimeSeries(category);    if (dateValues != null) {        SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);        for (Object[] objects : dateValues) {            Date date = null;            try {                date = dateFormat.parse(objects[0].toString());            } catch (ParseException e) {            }            String sValue = objects[1].toString();            double dValue = 0;            if (date != null &amp;&amp; isNumber(sValue)) {                dValue = Double.parseDouble(sValue);                timeseries.add(new Day(date), dValue);            }        }    }    return timeseries;}/** * 设置时间序列图样式 * * @param plot * @param isShowData *            是否显示数据 * @param isShapesVisible *            是否显示数据节点形状 */public static void setTimeSeriesRender(Plot plot, boolean isShowData, boolean isShapesVisible) {    XYPlot xyplot = (XYPlot) plot;    xyplot.setNoDataMessage(NO_DATA_MSG);    xyplot.setInsets(new RectangleInsets(10, 10, 5, 10));    XYLineAndShapeRenderer xyRenderer = (XYLineAndShapeRenderer) xyplot.getRenderer();    xyRenderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());    xyRenderer.setBaseShapesVisible(false);    if (isShowData) {        xyRenderer.setBaseItemLabelsVisible(true);        xyRenderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());        xyRenderer.setBasePositiveItemLabelPosition(new ItemLabelPosition(ItemLabelAnchor.OUTSIDE1, TextAnchor.BOTTOM_CENTER));// weizhi    }    xyRenderer.setBaseShapesVisible(isShapesVisible);// 数据点绘制形状    DateAxis domainAxis = (DateAxis) xyplot.getDomainAxis();    domainAxis.setAutoTickUnitSelection(false);    DateTickUnit dateTickUnit = new DateTickUnit(DateTickUnitType.YEAR, 1, new SimpleDateFormat(&quot;yyyy-MM&quot;)); // 第二个参数是时间轴间距    domainAxis.setTickUnit(dateTickUnit);    StandardXYToolTipGenerator xyTooltipGenerator = new StandardXYToolTipGenerator(&quot;{1}:{2}&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;), new DecimalFormat(&quot;0&quot;));    xyRenderer.setBaseToolTipGenerator(xyTooltipGenerator);    setXY_XAixs(xyplot);    setXY_YAixs(xyplot);}/** * 设置时间序列图样式 -默认不显示数据节点形状 * * @param plot * @param isShowData *            是否显示数据 */public static void setTimeSeriesRender(Plot plot, boolean isShowData) {    setTimeSeriesRender(plot, isShowData, false);}/** * 设置时间序列图渲染：但是存在一个问题：如果timeseries里面的日期是按照天组织， 那么柱子的宽度会非常小，和直线一样粗细 * * @param plot * @param isShowDataLabels */public static void setTimeSeriesBarRender(Plot plot, boolean isShowDataLabels) {    XYPlot xyplot = (XYPlot) plot;    xyplot.setNoDataMessage(NO_DATA_MSG);    XYBarRenderer xyRenderer = new XYBarRenderer(0.1D);    xyRenderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());    if (isShowDataLabels) {        xyRenderer.setBaseItemLabelsVisible(true);        xyRenderer.setBaseItemLabelGenerator(new StandardXYItemLabelGenerator());    }    StandardXYToolTipGenerator xyTooltipGenerator = new StandardXYToolTipGenerator(&quot;{1}:{2}&quot;, new SimpleDateFormat(&quot;yyyy-MM-dd&quot;), new DecimalFormat(&quot;0&quot;));    xyRenderer.setBaseToolTipGenerator(xyTooltipGenerator);    setXY_XAixs(xyplot);    setXY_YAixs(xyplot);}/** * 设置堆积柱状图渲染 * * @param plot */public static void setStackBarRender(CategoryPlot plot) {    plot.setNoDataMessage(NO_DATA_MSG);    plot.setInsets(new RectangleInsets(10, 10, 5, 10));    StackedBarRenderer renderer = (StackedBarRenderer) plot.getRenderer();    renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());    plot.setRenderer(renderer);    setXAixs(plot);    setYAixs(plot);}/** * 设置类别图表(CategoryPlot) X坐标轴线条颜色和样式 * * @param axis */public static void setXAixs(CategoryPlot plot) {    Color lineColor = new Color(31, 121, 170);    plot.getDomainAxis().setAxisLinePaint(lineColor);// X坐标轴颜色    plot.getDomainAxis().setTickMarkPaint(lineColor);// X坐标轴标记|竖线颜色}//隐藏x轴public static void setXAixs1(CategoryPlot plot) {    Color lineColor = new Color(255, 255, 255);    plot.getDomainAxis().setAxisLinePaint(lineColor);// X坐标轴颜色    plot.getDomainAxis().setTickMarkPaint(lineColor);// X坐标轴标记|竖线颜色}/** * 设置类别图表(CategoryPlot) Y坐标轴线条颜色和样式 同时防止数据无法显示 * * @param axis */public static void setYAixs(CategoryPlot plot) {    Color lineColor = new Color(192, 208, 224);    ValueAxis axis = plot.getRangeAxis();    axis.setAxisLinePaint(lineColor);// Y坐标轴颜色    axis.setTickMarkPaint(lineColor);// Y坐标轴标记|竖线颜色    // 隐藏Y刻度    axis.setAxisLineVisible(false);    axis.setTickMarksVisible(false);    // Y轴网格线条    plot.setRangeGridlinePaint(new Color(192, 192, 192));    plot.setRangeGridlineStroke(new BasicStroke(1));    plot.getRangeAxis().setUpperMargin(0.1);// 设置顶部Y坐标轴间距,防止数据无法显示    plot.getRangeAxis().setLowerMargin(0.1);// 设置底部Y坐标轴间距}/** * 设置XY图表(XYPlot) X坐标轴线条颜色和样式 * * @param axis */public static void setXY_XAixs(XYPlot plot) {    Color lineColor = new Color(31, 121, 170);    plot.getDomainAxis().setAxisLinePaint(lineColor);// X坐标轴颜色    plot.getDomainAxis().setTickMarkPaint(lineColor);// X坐标轴标记|竖线颜色}/** * 设置XY图表(XYPlot) Y坐标轴线条颜色和样式 同时防止数据无法显示 * * @param axis */public static void setXY_YAixs(XYPlot plot) {    Color lineColor = new Color(192, 208, 224);    ValueAxis axis = plot.getRangeAxis();    axis.setAxisLinePaint(lineColor);// X坐标轴颜色    axis.setTickMarkPaint(lineColor);// X坐标轴标记|竖线颜色    // 隐藏Y刻度    axis.setAxisLineVisible(false);    axis.setTickMarksVisible(false);    // Y轴网格线条    plot.setRangeGridlinePaint(new Color(192, 192, 192));    plot.setRangeGridlineStroke(new BasicStroke(1));    plot.setDomainGridlinesVisible(false);    plot.getRangeAxis().setUpperMargin(0.12);// 设置顶部Y坐标轴间距,防止数据无法显示    plot.getRangeAxis().setLowerMargin(0.12);// 设置底部Y坐标轴间距}/** * 是不是一个%形式的百分比 * * @param str * @return */public static boolean isPercent(String str) {    return str != null ? str.endsWith(&quot;%&quot;) &amp;&amp; isNumber(str.substring(0, str.length() - 1)) : false;}/** * 是不是一个数字 * * @param str * @return */public static boolean isNumber(String str) {    return str != null ? str.matches(&quot;^[-+]?(([0-9]+)((([.]{0})([0-9]*))|(([.]{1})([0-9]+))))$&quot;) : false;}/** * 创建类别数据集合 */public static DefaultCategoryDataset createDefaultCategoryDataset(Vector&lt;Serie&gt; series, String[] categories) {    DefaultCategoryDataset dataset = new DefaultCategoryDataset();    for (Serie serie : series) {        String name = serie.getName();        Vector&lt;Object&gt; data = serie.getData();        if (data != null &amp;&amp; categories != null &amp;&amp; data.size() == categories.length) {            for (int index = 0; index &lt; data.size(); index++) {                String value = data.get(index) == null ? &quot;&quot; : data.get(index).toString();                if (isPercent(value)) {                    value = value.substring(0, value.length() - 1);                }                if (isNumber(value)) {                    dataset.setValue(Double.parseDouble(value), name, categories[index]);                }            }        }    }    return dataset;}}</code></pre><p>charts实体类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">package cn.jeefast.scheduled.utils.createimg;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line">import java.text.DecimalFormat;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Vector;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 系列:名字和数据集合 构成一条曲线&lt;/br&gt; 可以将serie看作一根线或者一根柱子：</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * 参照JS图表来描述数据：&lt;/br&gt; series: [&#123; name: &apos;Tokyo&apos;, data: [7.0, 6.9, 9.5, 14.5]</span><br><span class="line"> * &#125;,&lt;/br&gt; &#123; name: &apos;New York&apos;, data: [-0.2, 0.8, 5.7, 11.3&#125; ]&lt;/br&gt;</span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">public class Serie implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line">    private String name;// 名字</span><br><span class="line">    private Vector&lt;Object&gt; data;// 数据值ֵ</span><br><span class="line"></span><br><span class="line">    public Serie() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * @param name</span><br><span class="line">     *            名称（线条名称）</span><br><span class="line">     * @param data</span><br><span class="line">     *            数据（线条上的所有数据值）</span><br><span class="line">     */</span><br><span class="line">    public Serie(String name, Vector&lt;Object&gt; data) &#123;</span><br><span class="line"></span><br><span class="line">        this.name = name;</span><br><span class="line">        this.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * @param name</span><br><span class="line">     *            名称（线条名称）</span><br><span class="line">     * @param array</span><br><span class="line">     *            数据（线条上的所有数据值）</span><br><span class="line">     */</span><br><span class="line">    public Serie(String name, Object[] array) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        if (array != null) &#123;</span><br><span class="line">            data = new Vector&lt;Object&gt;(array.length);</span><br><span class="line">            for (int i = 0; i &lt; array.length; i++) &#123;</span><br><span class="line">                data.add(array[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Vector&lt;Object&gt; getData() &#123;</span><br><span class="line">        return data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setData(Vector&lt;Object&gt; data) &#123;</span><br><span class="line">        this.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java绘制charts图形工具类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
    
    
      <category term="java绘制图形" scheme="http://leo-liu-c.github.io/tags/java%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://leo-liu-c.github.io/2019/11/13/hello-world/"/>
    <id>http://leo-liu-c.github.io/2019/11/13/hello-world/</id>
    <published>2019-11-13T03:35:02.825Z</published>
    <updated>2019-11-13T03:35:02.827Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
